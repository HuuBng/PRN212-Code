<Window x:Class="Group4WPF.Dialogs.RoomSelectionDialog"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:viewmodels="clr-namespace:Group4WPF.ViewModels"
            d:DataContext="{d:DesignInstance Type=viewmodels:RoomSelectionDialogViewModel}"
            mc:Ignorable="d"
            Title="Select Room" Height="450" Width="600"
            WindowStartupLocation="CenterScreen"
            ResizeMode="NoResize"
            ShowInTaskbar="False">
    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Text="Available Rooms" FontSize="18" FontWeight="Bold" Margin="0 0 0 10"/>

        <DataGrid Grid.Row="1"
                      ItemsSource="{Binding AvailableRooms}"
                      SelectedItem="{Binding SelectedRoom}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      AlternatingRowBackground="#F0F0F0"
                      RowBackground="White"
                      BorderBrush="#DDDDDD"
                      BorderThickness="1"
                      CanUserAddRows="False"
                      HeadersVisibility="Column"
                      GridLinesVisibility="Horizontal">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#3498DB"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="8 5"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0 0 1 0"/>
                    <Setter Property="BorderBrush" Value="#2980B9"/>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="Height" Value="30"/>
                </Style>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="5 0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#A8DFF9"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding RoomID}" Width="Auto" MinWidth="40"/>
                <DataGridTextColumn Header="Number" Binding="{Binding RoomNumber}" Width="*"/>
                <DataGridTextColumn Header="Type" Binding="{Binding RoomType.RoomTypeName}" Width="*"/>
                <DataGridTextColumn Header="Capacity" Binding="{Binding RoomMaxCapacity}" Width="Auto"/>
                <DataGridTextColumn Header="Price/Day" Binding="{Binding RoomPricePerDay, StringFormat='C2'}" Width="Auto"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 15 0 0">
            <Button Content="Select" Command="{Binding SelectRoomCommand}" Style="{StaticResource ActionButtonStyle}" Margin="0 0 10 0" Width="53"/>
            <Button Content="Cancel" IsCancel="True" Style="{StaticResource DangerButtonStyle}" Width="47"/>
        </StackPanel>
    </Grid>

    <Window.Resources>
        <!-- Styles for Action and Danger Buttons (re-using from AdminMainWindow.xaml or a merged resource dictionary) -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#3498DB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8 5"/>
           
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#21618C"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
            <Setter Property="Background" Value="#E74C3C"/>
            <!-- Since this style is BasedOn ActionButtonStyle, and ActionButtonStyle's template defines the CornerRadius,
                 you do NOT need to set CornerRadius here either. The template handles it. -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C0392B"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#A93226"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
</Window>
